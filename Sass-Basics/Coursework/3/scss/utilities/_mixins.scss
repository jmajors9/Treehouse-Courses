// =========================================
//  Mixins
// =========================================

// Slanted effect
@mixin skewed {
  position: relative;

  &::after {
    content: '';
    display: block;
    height: 50px;
    position: absolute;
    transform: skewY(-2deg);
    width: 100%;
    @content;
  }
}

// Center containers
@mixin center($w) {
  margin-left: auto;
  margin-right: auto;
  max-width: $max-width;
  width: $w;
}

// Rounded elements
@mixin roundy($dim, $brdr: null) {
  border: $brdr;
  border-radius: 50%;
  height: $dim;
  width: $dim;
}

// Create a flex container
@mixin flexy(
  $dir: null,
  $wrap: null,
  $just: null,
  $disp: flex
  ) {
  display: $disp;
  flex-direction: $dir;
  flex-wrap: $wrap;
  justify-content: $just;
}

// Media Queries
@mixin mq($break) {
  // let's create a var that will let us pull the size values
  $value: map-get($breakpoints, $break);
  $sm: map-get($breakpoints, 'sm');

  @if $value == null {
    // @error "`#{$break}` is not a valid breakpoint name."; - breaks the build!
    @warn "`#{$break}` is not a valid breakpoint name."; // - just puts a warning in the console.
  } @elseif $value < $sm {
    @media (max-width: $value) {
      @content;
    }
  } @else {
    @media (min-width: $value) {
      @content;
    }
  }
}

// Colors
@mixin themes($map) {
  @each $theme, $color in $map {
    &-#{$theme} {
      color: $color;
    }
  }
}
